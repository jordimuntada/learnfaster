<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <title>Upload Text File</title>
  <style>
    /* Add some custom CSS for the drag-and-drop area */
    #drop-area {
      border: 2px dashed #007BFF;
      border-radius: 5px;
      padding: 20px;
      text-align: center;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <h1 class="display-4">Upload a Text File</h1>
    <div id="drop-area">
      <h4>Drag and drop a text file here or click to select one.</h4>
      <input type="file" id="fileInput" accept=".txt" style="display: none;">
    </div>
    <div class="mt-3">
      <p>Or, you can choose a file using the standard file input field:</p>
      <form action="/upload" method="post" enctype="multipart/form-data">
        <input type="file" name="textfile" accept=".txt" required>
        <button type="submit" class="btn btn-primary">Upload File</button>
      </form>
      <form action="/makeText" method="post" enctype="multipart/form-data">
        <input type="file" name="textfile" accept=".txt" required>
        <button type="submit" class="btn btn-primary">Make a text</button>
      </form>
    </div>
  </div>

  <script>
    const dropArea = document.getElementById('drop-area');
    const fileInput = document.getElementById('fileInput');
  
    // Prevent the default behavior when a file is dragged over the drop area
    dropArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropArea.style.border = '2px dashed #28a745'; // Change border color when a file is dragged over
    });
  
    // Restore the border color to its original state when a file is dragged out
    dropArea.addEventListener('dragleave', () => {
      dropArea.style.border = '2px dashed #007BFF';
    });
  
    // Handle the file drop event
    dropArea.addEventListener('drop', (e) => {
      e.preventDefault();
      dropArea.style.border = '2px dashed #007BFF';
  
      const file = e.dataTransfer.files[0] || fileInput.files[0]; // Get the dropped file or the selected file
  
      if (file) {
        fileInput.files = [file]; // Populate the file input field with the file
        dropArea.innerHTML = `<h4>Selected File: ${file.name}</h4>`;
      }
    });
  
    // Open the file input dialog when the drop area is clicked
    dropArea.addEventListener('click', () => {
      fileInput.click();
    });
  
    // Handle file selection using the file input field
    fileInput.addEventListener('change', () => {
      if (fileInput.files[0]) {
        dropArea.innerHTML = `<h4>Selected File: ${fileInput.files[0].name}`;
      }
    });
  </script>
</body>
</html>
